// Generated by Dagger (https://google.github.io/dagger).
package com.example.daggersample.student.dagger;

import com.example.daggersample.student.Address;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AddressModule_GetAddressFactory implements Factory<Address> {
  private final AddressModule module;

  public AddressModule_GetAddressFactory(AddressModule module) {
    this.module = module;
  }

  @Override
  public Address get() {
    return getAddress(module);
  }

  public static AddressModule_GetAddressFactory create(AddressModule module) {
    return new AddressModule_GetAddressFactory(module);
  }

  public static Address getAddress(AddressModule instance) {
    return Preconditions.checkNotNull(
        instance.getAddress(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
